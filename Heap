
#include<bits/stdc++.h>
using namespace std;
class Heap{
	public:
		int size;
		int arr[100];
		
		Heap(){
			size=0;
			arr[0]=-1;
		}

		void insert(int val){
			size=size+1;
			int index=size;
			arr[index]=val;

			while(index>1){
				int parent=index/2;
				if(arr[parent]<arr[index]){
					swap(arr[parent],arr[index]);
					index=parent;
				}else{
					return ;
				}
			}
		}

		void deleteFromHeap(){

			if(size==0){
				cout<<"Heap empty"<<endl;
			}

			arr[1]=arr[size];
			size--;

			int i=1;
			while(i<size){
				int leftIndex=2*i;
				int rightIndex=2*i+1;
				
				if(leftIndex< size && arr[i]<arr[leftIndex]){
					swap(arr[i],arr[leftIndex]);
					i=leftIndex;
				}else if(rightIndex<size && arr[i]<arr[rightIndex]){
					swap(arr[i],arr[rightIndex]);
					i=rightIndex;
				}else{
					return ;
				}
			}

		}

		void print(){
			cout<<endl;
			for(int i=1;i<=size;i++){
				cout<<arr[i]<<" ";
			}
			cout<<endl;

		}
};
------------------------------------------
Heapify Algorithm:
void heapify(int arr[],int n,int i){

	int largest=i;
	int left=2*i;
	int right=2*i+1;

	if(left < n && arr[largest]< arr[left]){
		largest=left;
	}
	if(right < n && arr[largest] < arr[right]){
		largest=right;
	}	

	if(largest !=i){
		swap(arr[largest],arr[i]);
		heapify(arr,n,largest);
	}

}
int main(){
	int ar[6]={-1,54,53,52,50};
	int n=5;
	for(int i=n/2; i>0;i--){
		heapify(ar,n,i);
	}
	for(int i=1;i<=n;i++){
		cout<<ar[i]<<" ";
	}

	
	return 0;
}
-------------------------------------
Heap Sort:
void heapSort(int arr[],int n){
	int size=n;
	while(size>1){
		swap(arr[size],arr[1]);
		size--;

		heapify(arr,size,1);
	}
}
