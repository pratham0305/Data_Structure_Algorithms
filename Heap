
#include<bits/stdc++.h>
using namespace std;
class Heap{
	public:
		int size;
		int arr[100];
		
		Heap(){
			size=0;
			arr[0]=-1;
		}

		void insert(int val){
			size=size+1;
			int index=size;
			arr[index]=val;

			while(index>1){
				int parent=index/2;
				if(arr[parent]<arr[index]){
					swap(arr[parent],arr[index]);
					index=parent;
				}else{
					return ;
				}
			}
		}

		void deleteFromHeap(){

			if(size==0){
				cout<<"Heap empty"<<endl;
			}

			arr[1]=arr[size];
			size--;

			int i=1;
			while(i<size){
				int leftIndex=2*i;
				int rightIndex=2*i+1;
				
				if(leftIndex< size && arr[i]<arr[leftIndex]){
					swap(arr[i],arr[leftIndex]);
					i=leftIndex;
				}else if(rightIndex<size && arr[i]<arr[rightIndex]){
					swap(arr[i],arr[rightIndex]);
					i=rightIndex;
				}else{
					return ;
				}
			}

		}

		void print(){
			cout<<endl;
			for(int i=1;i<=size;i++){
				cout<<arr[i]<<" ";
			}
			cout<<endl;

		}
};

int main(){
	Heap h;

	h.insert(67);
	h.insert(23);
	h.insert(90);
	h.insert(12);
	h.print();
	h.deleteFromHeap();
	h.print();


	return 0;
}
